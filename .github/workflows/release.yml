name: Auto Increment Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: "Release version (optional)"
        required: false
        default: ""

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.22.5"

      - name: Get latest release tag
        id: fetch_tag
        run: |
          if [ -z "${{ github.event.inputs.release_version }}" ]; then
            LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
            echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_ENV
          else
            echo "LATEST_TAG=${{ github.event.inputs.release_version }}" >> $GITHUB_ENV
          fi

      - name: Increment version
        id: increment_version
        run: |
          if [ -z "${{ github.event.inputs.release_version }}" ]; then
            VERSION=${LATEST_TAG#v}
            IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}
            PATCH=$((PATCH + 1))
            NEW_VERSION="v$MAJOR.$MINOR.$PATCH"
          else
            NEW_VERSION=${{ github.event.inputs.release_version }}
          fi
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Set up Git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Create new tag
        run: |
          git tag ${{ env.NEW_VERSION }}
          git push origin ${{ env.NEW_VERSION }}

      - name: Build all binaries
        run: |
          mkdir -p dist
          go mod tidy
          GOARCH=amd64 GOOS=linux go build -o dist/ssm-proxy-go-linux-amd64
          GOARCH=amd64 GOOS=darwin go build -o dist/ssm-proxy-go-darwin-amd64
          GOARCH=amd64 GOOS=windows go build -o dist/ssm-proxy-go-windows-amd64.exe
          GOARCH=arm64 GOOS=linux go build -o dist/ssm-proxy-go-linux-arm64
          GOARCH=arm64 GOOS=darwin go build -o dist/ssm-proxy-go-darwin-arm64
          GOARCH=386 GOOS=linux go build -o dist/ssm-proxy-go-linux-386
          GOARCH=386 GOOS=windows go build -o dist/ssm-proxy-go-windows-386.exe

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_VERSION }}
          release_name: Release ${{ env.NEW_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Linux AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-linux-amd64
          asset_name: ssm-proxy-go-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Darwin AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-darwin-amd64
          asset_name: ssm-proxy-go-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload Windows AMD64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-windows-amd64.exe
          asset_name: ssm-proxy-go-windows-amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload Linux ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-linux-arm64
          asset_name: ssm-proxy-go-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload Darwin ARM64 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-darwin-arm64
          asset_name: ssm-proxy-go-darwin-arm64
          asset_content_type: application/octet-stream

      - name: Upload Linux 386 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-linux-386
          asset_name: ssm-proxy-go-linux-386
          asset_content_type: application/octet-stream

      - name: Upload Windows 386 binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/ssm-proxy-go-windows-386.exe
          asset_name: ssm-proxy-go-windows-386.exe
          asset_content_type: application/octet-stream
